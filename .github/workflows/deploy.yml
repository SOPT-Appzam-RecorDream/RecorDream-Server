# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: deploy

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop] # develop 브랜치에 push/pr 했을 때 workflow를 trigger 함.

jobs:
  build:
    runs-on: ubuntu-18.04 # 여기서 사용할 가상 환경의 인스턴스 지정하기. 

    strategy:
      matrix:
        node-version: [16.13.2] #노드 버전 -> 서경 16.13.2
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout source code. # 레포의 코드를 CI 서버로 내려받은 후 특정 브랜치고 전환
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }} # 노드 설치
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Check Npm -v
        run: npm -v

      - name: create env file # 깃헙에 등록한 환경변수들로 .env 생성.
        working-directory: ./
        run: |
          pwd
          touch .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo MONGODB_URI=${{ secrets.MONGODB_URI }} >> .env
          cat .env

      - name: build server files # yarn으로 필요한 디펜던시 설치 후 빌드
        working-directory: ./
        run: |
          yarn
          yarn run build

      - name: AWS configure credentials # S3에 접근하기 위한 IAM 사용자 키 값을 등록
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: zip file # 명시한 파일, 폴더들을 recordream.zip 파일로 압축
        run: zip -r recordream.zip ./dist ./scripts ./appspec.yml ./.env ./package.json

      - name: upload to S3  # 실제로 S3에 recordream.zip 압축파일을 옮기기
        run: aws s3 cp --region ap-northeast-2 ./recordream.zip s3://recordream-build/deploy/

      - name: deploy with AWS codeDeploy  # AWS CodeDeploy가 실행되고 가장 아랫줄에 지정한 곳에서 압축 파일을 풀어서 CodeDeploy와 연결된 EC2 인스턴스에 배포
        run: aws deploy create-deployment
          --application-name recordream-codedeploy
          --deployment-config-name CodeDeployDefault.OneAtATime
          --deployment-group-name GROUP
          --s3-location bucket=recordream-build,bundleType=zip,key=deploy/recordream.zip